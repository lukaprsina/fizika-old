Program = _{ SOI ~ Expr ~ EOF }

Expr = { UnaryExpr | BinaryExpr }

Term = _{Int | "(" ~ Expr ~ ")" }

UnaryExpr = { Operator ~ Term }

BinaryExpr = { Term ~ (Operator ~ Term)* }

String = { (!"'" ~ ASCII)* }

FunctionArg = { Term }

Function = { String ~ "(" ~ FunctionArg ~ ("," ~ FunctionArg)* ~ ")" }

Operator = { "+" | "-" | "*" | "/" | "%" | "^" }

Int = @{ Operator? ~ ASCII_DIGIT+ }

WHITESPACE = _{ " " | "\t" }

EOF = _{ EOI | ";" }
