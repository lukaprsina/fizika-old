1*2*3: flatten,
1+2+3: flatten, 
1(2+3): dont't, 
1(2*3): flatten,

Expression:
    consume products and build new_products
    for index, product in products:
        new_product = new Product;

        if product.numerator.len() == 1
            if product.numerator[0] is expression:
                product.numerator[0] flatten expression -> nested_node_or_expressions;
                new_product.insert(nested_node_or_expressions, 0);
            else:
                new_product.insert(product.numerator[0], 0);
        else:
            for node or expression, index2 in product.numerator:
                if expression && if products.len() == 1:
                    flatten expression -> nested_node_or_expressions;
                    new_product.insert(nested_node_or_expressions, index + index2);
                else:            
                    new_products.insert(product, index);

        new_products.push(new_product)

    products = new_products;
